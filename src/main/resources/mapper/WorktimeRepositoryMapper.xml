<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.teamBus.web.repository.WorktimeRepository">

	<resultMap id="WorktimeResultMap" type="Worktime">
		<result property="employeeId" column="employee_id" />
		<result property="clockIn" column="clock_in" />
		<result property="breakTimeStart" column="break_time_start" />
		<result property="breakTimeEnd" column="break_time_end" />
		<result property="clockOut" column="clock_out" />
	</resultMap>
	
	<resultMap id="listWmViewMap" type="listWmView">
		<result property="id" column="id" />
		<result property="companyId" column="company_id" />
		<result property="name" column="name" />
		<result property="image" column="image" />
		<result property="position" column="position" />
		<result property="workHoursSum" column="workhours_sum" />
		<result property="restHoursSum" column="resthours_sum" />
	</resultMap>
	
	<select id="findAll" resultMap="WorktimeResultMap">
		select *
		from worktime
	</select>
	
	<select id="findById" resultMap="WorktimeResultMap">
		select *
		from worktime
		where id=#{id}
	</select>
	
	<insert id="insertNow" parameterType="Worktime">
		insert worktime(employee_id) 
		values (#{employeeId})
	</insert>
	
	<update id="update" parameterType="Worktime">
		update worktime
		<set>
			<if test="date != null">date = #{date}, </if>
			<if test="clockIn != null">clock_in = #{clockIn}, </if>
			<if test="clockOut != null">clock_out = #{clockOut}, </if>
			<if test="breakTimeStart != null">break_time_start = #{breakTimeStart}, </if>
			<if test="breakTimeEnd != null">break_time_end = #{breakTimeEnd}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete 
		from worktime
		where id=${id}
	</delete>
	
	<select id="findTodayByEmployeeId" resultMap="WorktimeResultMap">
		select *
		from worktime
		where employee_id = #{id}
		and date = date(now())
	</select>
	

	<insert id="addWorktime">
		insert worktime(employee_id) 
		values (#{employeeId})
	</insert>
	
<!-- 	<update id="updateWorktime" parameterType="Worktime">
		update worktime
		<set>
			<if test="date != null">date = #{date}</if>
			<if test="clockIn != null">clock_in = #{clockIn}</if>
			<if test="clockOut != null">clock_out = #{clockOut}</if>
			<if test="breakTimeStart != null">break_time_start = #{breakTimeStart}</if>
			<if test="breakTimeEnd != null">break_time_end = #{breakTimeEnd}</if>
		</set>
		where id = (select id from worktime
					where employee_id = #{employeeId}
					order by date desc
					limit 1)
	</update> -->

	<select id="findRecentByEmployeeId" resultMap="WorktimeResultMap">
		select *
		from worktime
		where employee_id = #{employeeId}
		order by date desc
		limit 1
	</select>

	<select id="findhoursByFilter" resultMap="listWmViewMap">
			select 
				id, company_id, name, image, department, position, 
			    sec_to_time(sum(time_to_sec(workhours))) workhours_sum,
			    sec_to_time(sum(time_to_sec(resthours))) resthours_sum 
			from 
				admin_list_wm_view
	    	<where>
	    		<if test="employeeId != null">and id = #{employeeId}</if>
	    		<if test="fromDate != null">and DATE_FORMAT(date,'%Y-%m-%d') between #{fromDate} and #{toDate}</if>
	   		</where>
	    	group by 
	    		id, company_id, name, image, department, position;
		</select>
	

</mapper>